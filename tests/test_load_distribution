from papermodels.models import load_distribution as ld
from shapely import Polygon, GeometryCollection

import pytest

square_45 = Polygon([
    [0., 5.],
    [5., 10.],
    [10., 5.],
    [5., 0.,],
])

square_pac_man = Polygon([
    [0., 0.],
    [0., 10.],
    [10., 10.],
    [5., 5.,],
    [10., 0.,],
])

square_bow_tie = Polygon([
    [0., 0.],
    [4., 5.],
    [0., 10.],
    [10., 10.],
    [6., 5.,],
    [10., 0.,],
])

square_with_L_hole = Polygon([
    [0., 0.,],
    [0., 10.],
    [10., 10.,],
    [10., 0.],
], 
    holes = [[
    [2., 2.],
    [2., 8.],
    [8., 8.],
    [8., 6.],
    [4., 6.],
    [4., 2.],
]]
)

p0 = (0., 0.)
p1 = (10., 10.)
p2 = (6., 0.)
p3 = (6., 10.)
p4 = (15., 20.)
p5 = (0., 10.)


def test_get_void_regions():
    assert str(ld.get_void_regions(square_with_L_hole)) == '[<POLYGON ((2 8, 8 8, 8 6, 4 6, 4 2, 2 2, 2 8))>]'
    assert str(ld.get_void_regions(square_bow_tie)) == '[<POLYGON ((0 10, 4 5, 0 0, 0 10))>, <POLYGON ((10 0, 6 5, 10 10, 10 0))>]'
    assert str(ld.get_void_regions(square_pac_man)) == '[<POLYGON ((10 0, 5 5, 10 10, 10 0))>]'
    assert str(ld.get_void_regions(square_45)) == []


def test_get_slope_and_intercept():
    assert ld.get_slope_and_intercept(p0, p1) == (1.0, 0.)
    assert ld.get_slope_and_intercept(p2, p1) == (10./4., -15)
    with pytest.raises(ZeroDivisionError):
        ld.get_slope_and_intercept(p2, p3)

def test_get_overlap_coords():
    assert ld.get_overlap_coords(0., 5., 3., 6.) == (3., 5.)
    assert ld.get_overlap_coords(2., 6., 0., 5.) == (2., 5.)
    assert ld.get_overlap_coords(0., 10., 1., 6.) == (1., 6.)
    assert ld.get_overlap_coords(1., 5., 0., 10.) == (1., 5.)
    assert ld.get_overlap_coords(5., 5., 1., 10.) == None

def get_overlap_region():
    pass

